plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco' // <-- enable JaCoCo for code coverage
}

group = 'net.projectsync'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'

    // Karate for API testing
    testImplementation 'com.intuit.karate:karate-junit5:1.2.0'
    testImplementation 'com.intuit.karate:karate-core:1.2.0'
}

// Include .feature files as resources
sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

// Configure test task
test {
    useJUnitPlatform()
    // Fix reflective access issues on Java 11+
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.nio=ALL-UNNAMED'
}

// JaCoCo configuration
jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test // tests are required before generating report
    reports {
        xml.required = true
        html.required = true
    }
}
